name: elasticsearch-open-source-integration
displayName: Elasticsearch Open Source Integration
description: New Relic install recipe for default Elasticsearch Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-elasticsearch

installTargets:
  - type: host
    os: windows

keywords:
  - Integration
  - Elasticsearch
  - Windows

processMatch:
  - elasticsearch-service-x64.exe
  - elasticsearch

logMatch:
  - name: Elasticsearch log
    file: C:\Program Files\Elasticsearch2\elasticsearch-7.12.0\logs\elastic*.log

validationNrql: "SELECT count(*) from ElasticsearchClusterSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

inputVars:
  - name: "NR_CLI_API_USERNAME"
    prompt: "ElasticSearch Username"
  - name: "NR_CLI_API_PASSWORD"
    prompt: "ElasticSearch Password"
  - name: "NR_CLI_API_HOSTNAME"
    prompt: "ElasticSearch Hostname (default: localhost)"
    default: "localhost"
  - name: "NR_CLI_API_PORT"
    prompt: "ElasticSearch Port (default: 9200)"
    default: 9200
  - name: "NR_CLI_API_CONFIG_PATH"
    prompt: "ElasticSearch config file (default: C:/Program Files/Elasticsearch2/elasticsearch-7.12.0/config/elasticsearch.yml)"
    default: C:\Program Files\Elasticsearch2\elasticsearch-7.12.0\config\elasticsearch.yml
  - name: "NR_CLI_API_USE_SSL"
    prompt: "Use SSL to connect? (y/n)"
    default: false
  - name: "NR_CLI_API_CA_BUNDLE_DIR"
    prompt: "SSL certificate Directory (if applicable)"
  - name: "NR_CLI_API_CA_BUNDLE_FILE"
    prompt: "SSL Certificate File (if applicable)"

preInstall:
  info: |2
      To capture data from the Elasticsearch integration, you'll first need to meet these prerequisites:
      - Elasticsearch version requirement (see https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/elasticsearch-monitoring-integration#req)

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: remove_any_previous
        - task: install

    assert_pre_req:
      cmds:
        - powershell -command '$output = Get-Service "newrelic-infra"; if ( -not ($output -like "*newrelic-infra*") ) { Write-Error "The newrelic-infra agent service is not installed on the host, but is required to install this integration. Please install the newrelic infrastructure agent." }'
        - powershell -command '$output = & "C:\Program Files\Elasticsearch\elasticsearch-7.12.0\bin\elasticsearch-users.bat" useradd {{.NR_CLI_API_USERNAME}} -p ${{.NR_CLI_API_PASSWORD}} -r superuser; if ( -not ($output -like "*User {{.NR_CLI_API_USERNAME}} already exist*") ) { Write-Error "Cannot create user {{.NR_CLI_API_USERNAME}} with password {{.NR_CLI_API_PASSWORD}}. User already exist." }'
        - powershell -command '$output = cat "{{.NR_CLI_API_CONFIG_PATH}}"; if( -not ($output -like "*Elasticsearch Configuration*") ) { Write-Error "There is no confgiuration file for elasticsearch. Make sure the file exist in provided path." }'

    remove_any_previous:
      ignore_error: true
      cmds:
        - |
          powershell -command '
          function Find-UninstallGuids {
            param (
              [Parameter(Mandatory)]
              [string]$Match
            )

            $baseKeys = Get-ChildItem -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall `
            | % { $_.Name.TrimStart("HKEY_LOCAL_MACHINE\") }

            $wowKeys = Get-ChildItem -Path HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall `
            | % { $_.Name.TrimStart("HKEY_LOCAL_MACHINE\") }

            $allKeys = $baseKeys + $wowKeys

            $uninstallIds = New-Object System.Collections.ArrayList
            foreach ($key in $allKeys) {
              $keyData = Get-Item -Path HKLM:\$key
              $name = $keyData.GetValue("DisplayName")
              if ($name -and $name -match $Match) {
                $keyId = Split-Path $key -Leaf
                $uninstallIds.Add($keyId) | Out-Null
              }
            }

            if ($uninstallIds.Count -eq 0) {
              return @()
            }

            return $uninstallIds
          }

          $uninstallIds = Find-UninstallGuids -Match "nri-mssql"
          foreach ($uninstallId in $uninstallIds) {
            $uninstallCommand = "msiexec /x """ + $uninstallId + """ /qn"
            Invoke-Expression $uninstallCommand
            # wait here to allow uninstall command to complete since it returns without waiting
            Start-Sleep -s 15
          }
          '
    install:
      label: "Installing elasticsearch integration..."
      cmds:
        - powershell -command '(New-Object System.Net.WebClient).DownloadFile("http://download.newrelic.com/infrastructure_agent/windows/integrations/nri-elasticsearch/nri-elasticsearch-amd64.msi", "$env:TEMP\nri-elasticsearch-amd64.msi");'
        - powershell -command 'msiexec.exe /qn /i "$env:TEMP\nri-elasticsearch-amd64.msi" | Out-Null;'
        - powershell -command 'if("{{.NR_CLI_API_USE_SSL}}" -like "y") {
                                  echo "{{.ELASTICSEARCH_SSL}}" | Out-File -FilePath C:\\Progra~1\\New` Relic\\newrelic-infra\\integrations.d\\elasticsearch-config.yml; 
                                } else { 
                                    echo "{{.ELASTICSEARCH}}" | Out-File -FilePath C:\\Progra~1\\New` Relic\\newrelic-infra\\integrations.d\\elasticsearch-config.yml; 
                                  }'
        - powershell -command 'Restart-Service newrelic-infra'


      vars:
        ELASTICSEARCH: |
          integration_name: com.newrelic.elasticsearch

          instances:
            - name: elasticsearch
              command: all
              arguments:
                cluster_environment: staging
                config_path: {{.NR_CLI_API_CONFIG_PATH}}
                hostname: {{.NR_CLI_API_HOSTNAME}}
                local_hostname: localhost
                username: {{.NR_CLI_API_USERNAME}}
                password: {{.NR_CLI_API_PASSWORD}}
                port: {{.NR_CLI_API_PORT}}
                timeout: 30
                use_ssl: {{.NR_CLI_API_USE_SSL}}
                indices_regex:
                collect_indices: true
                collect_primaries: true

        ELASTICSEARCH_SSL: |
          integration_name: com.newrelic.elasticsearch

          instances:
            - name: elasticsearch
              command: all
              arguments:
                cluster_environment: staging
                config_path: {{.NR_CLI_API_CONFIG_PATH}}
                hostname: {{.NR_CLI_API_HOSTNAME}}
                local_hostname: localhost
                username: {{.NR_CLI_API_USERNAME}}
                password: {{.NR_CLI_API_PASSWORD}}
                port: {{.NR_CLI_API_PORT}}
                timeout: 30
                use_ssl: {{.NR_CLI_API_USE_SSL}}
                ca_bundle_dir: {{.NR_CLI_API_CA_BUNDLE_DIR}}
                ca_bundle_file: {{.NR_CLI_API_CA_BUNDLE_FILE}}
                indices_regex:
                collect_indices: true
                collect_primaries: true

postInstall:
  info: |2
      ⚙️  The Elasticsearch configuration file can be found in /etc/newrelic-infra/integrations.d/elasticsearch-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/elasticsearch-monitoring-integration#config
