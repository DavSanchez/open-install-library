name: mongodb-open-source-integration
displayName: MongoDB Open Source Integration
description: New Relic install recipe for default MongoDB Open Source on-host integration (via Infra-Agent)
repository: https://github.com/newrelic/nri-mongodb

installTargets:
  - type: host
    os: windows

keywords:
  - Integration
  - MongoDB
  - Windows

processMatch:
  - mongodb
  - mongod

logMatch:
  - name: MongoDB log
    file: C:\data\mongo.log

validationNrql: "SELECT count(*) from MongoDatabaseSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

inputVars:
  - name: "NR_DB_USERNAME"
    prompt: "MongoDB Username"
  - name: "NR_DB_PASSWORD"
    prompt: "MongoDB Password"
  - name: "NR_DB_CLUSTERNAME"
    prompt: "MongoDB Cluster Name"
    secret: true
  - name: "NR_DB_AUTH"
    prompt: "MongoDB Auth Source (default: admin)"
    default: "admin"
  - name: "NR_DB_HOSTNAME"
    prompt: "MongoDB Hostname (default: localhost)"
    default: "localhost"
  - name: "NR_DB_PORT"
    prompt: "MongoDB Port (default: 27017)"
    default: 27017
  - name: "NR_DB_SSL"
    prompt: "Use SSL to connect? (y/n)"
  - name: "NR_DB_CERT_AUTH_FILE"
    prompt: "Certificate Authority file (if applicable)"
  - name: "NR_DB_SKIP_SSL_VERIFY"
    prompt: "Verify certificate? (y/n)"
  - name: "NR_DB_CLIENT_CERT_FILE"
    prompt: "Client Certificate file (if applicable)"
  - name: "NR_DB_CERT_PASSPHRASE"
    prompt: "Passphrase to decrypt the PEM key file (if applicable)"

preInstall:
  info: |2
      To capture data from the MongoDB integration, you'll first need to meet these prerequisites:
      - MongoDB version requirement (see https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mongodb-monitoring-integration#comp-req)
      - User with clusterMonitor and listCollections roles

      In the MongoDB shell, execute the following commands to create a
      listCollections role and a new user, then assign clusterMonitor and
      listCollections roles to the new user.
      Note: username, password, and similar user-specific values must be replaced.

      In the MongoDB shell run the following command
      > rs.initiate()

      Switch to the admin database
      > use admin

      Use the following command to create the listCollections role:
      > db.createRole({role: "listCollections", privileges: [{ resource: {db:"",collection:""}, actions: ["listCollections"] }], roles: []})

      Use the following commands to create a new user, and assign clusterMonitor and listCollections roles to the user:
      > db.createUser({ user: "username", pwd: "password", roles: [ "clusterMonitor", "listCollections" ]})

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: remove_any_previous
        - task: install

    assert_pre_req:
      cmds:
        - powershell -command '$output = Get-Service "newrelic-infra"; if ( -not ($output -like "*newrelic-infra*") ) { Write-Error "The newrelic-infra agent service is not installed on the host, but is required to install this integration. Please install the newrelic infrastructure agent." }'

    remove_any_previous:
      ignore_error: true
      cmds:
        - powershell -command '$app = Get-WmiObject -Class Win32_Product | Where-Object {$_.Name -like "*nri-mongodb*"}; if ($app) { $app.Uninstall() }'

    install:
      label: "Installing mongodb integration..."
      cmds:
        - powershell -command '(New-Object System.Net.WebClient).DownloadFile("http://download.newrelic.com/infrastructure_agent/windows/integrations/nri-mongodb/nri-mongodb-amd64.msi", "$env:TEMP\nri-mongodb-amd64.msi");'
        - powershell -command 'msiexec.exe /qn /i "$env:TEMP\nri-mongodb-amd64.msi" | Out-Null;'
        - powershell -command 'echo "{{.MONGODB}}" >> "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mongodb-win-config.yml"'
        - powershell -command '$file,$find,$replace = "C:\\Program Files\\New Relic\\newrelic-infra\\integrations.d\\mongodb-win-config.yml","xyz"," `'{`"admin`":null}`'"; (Get-Content $file).replace($find, $replace) | Set-Content $file'
        - powershell -command 'Restart-Service newrelic-infra'
      vars:
        MONGODB: |
          integration_name: com.newrelic.mongodb

          instances:
            - name: all
              command: all
              arguments:
                host: {{.NR_DB_HOSTNAME}}
                port: {{.NR_DB_PORT}}
                username: {{.NR_DB_USERNAME}}
                password: {{.NR_DB_PASSWORD}}
                auth_source: {{.NR_DB_AUTH}}
                cluster_name: {{.NR_DB_CLUSTERNAME}}
                ssl: false
                ssl_insecure_skip_verify: true
                ssl_ca_certs: /sample/path/to/ca_certs
                filters: 'xyz'
                concurrent_collections: 50

postInstall:
  info: |2
      ⚙️  The MongoDB configuration file can be found in /etc/newrelic-infra/integrations.d/mongodb-config.yml
      Edit this file to make changes or configure advanced features for this integration. See the docs for options:
      https://docs.newrelic.com/docs/integrations/host-integrations/host-integrations-list/mongodb-monitoring-integration#config
