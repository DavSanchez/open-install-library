# Visit our schema definition for additional information on this file format
# https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition

name: pi-infra-installer
displayName: Raspberry Pi Infrastructure Agent
description: New Relic install recipe for the infrastructure agent on Raspberry Pi
repository: https://github.com/newrelic/nri-prometheus

stability: experimental

installTargets:
  - type: host
    os: linux
    platformFamily: debian
    kernelArch: ARMV7L

keywords:
  - raspberrypi
  - infrastructure

processMatch: []

validationNrql: "SELECT count(*) from SystemSample where hostname like '{{.HOSTNAME}}%' FACET entityGuid SINCE 10 minutes ago"

install:
  version: "3"
  silent: true

  tasks:
    default:
      cmds:
        - task: assert_pre_req
        - task: teardown_existing_agent
        - task: install_infra
        - task: restart
        - task: assert_agent_started

    assert_pre_req:
      cmds:
        - |
          IS_GREP_INSTALLED=$(which grep | wc -l)
          if [ $IS_GREP_INSTALLED -eq 0 ] ; then
            echo "grep is required to run the newrelic install. Please install grep and re-run the installation." >> /dev/stderr
            exit 10
          fi
        - |
          IS_WGET_INSTALLED=$(which wget | wc -l)
          if [ $IS_WGET_INSTALLED -eq 0 ] ; then
            echo "wget is required to run the newrelic install. Please install wget and re-run the installation." >> /dev/stderr
            exit 11
          fi
        - |
          IS_TAR_INSTALLED=$(which tar | wc -l)
          if [ $IS_TAR_INSTALLED -eq 0 ] ; then
            echo "tar is required to run the newrelic install. Please install tar and re-run the installation." >> /dev/stderr
            exit 12
          fi
        - |
          IS_CAT_INSTALLED=$(which cat | wc -l)
          if [ $IS_CAT_INSTALLED -eq 0 ] ; then
            echo "cat is required to run the newrelic install. Please install cat and re-run the installation." >> /dev/stderr
            exit 13
          fi
        - |
          IS_TEE_INSTALLED=$(which tee | wc -l)
          if [ $IS_TEE_INSTALLED -eq 0 ] ; then
            echo "tee is required to run the newrelic install. Please install tee and re-run the installation." >> /dev/stderr
            exit 14
          fi
        - |
          IS_TOUCH_INSTALLED=$(which touch | wc -l)
          if [ $IS_TOUCH_INSTALLED -eq 0 ] ; then
            echo "touch is required to run the newrelic install. Please install touch and re-run the installation." >> /dev/stderr
            exit 15
          fi
        - |
          IS_DOCKER_CONTAINER=$(sudo grep 'docker\|lxc' /proc/1/cgroup | wc -l)
          if [ $IS_DOCKER_CONTAINER -gt 0 ] ; then
            echo "We’ve detected that you are installing our infrastructure agent inside a docker container. This agent is not designed to be installed within a container, but rather on the host it is running on or as a separate container. For additional information visit: https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/linux-installation/docker-container-infrastructure-monitoring/" >> /dev/stderr
            exit 18
          fi
        - |
          IS_WSL_CONTAINER=$(sudo grep -i 'Microsoft' /proc/version | wc -l)
          if [ $IS_WSL_CONTAINER -gt 0 ] ; then
            echo "Sorry, our infrastructure agent cannot be installed for Microsoft Windows Subsystem for Linux, this is an unsupported operating system." >> /dev/stderr
            exit 19
          fi

    teardown_existing_agent:
      cmds:
        - |
          # Stop service
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl stop newrelic-infra || true
          else 
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl stop newrelic-infra || true
            else
              sudo /etc/init.d/newrelic-infra stop || true
            fi
          fi
        - |
          # Remove old files
          sudo rm -rf /usr/local/bin/newrelic-infra
          sudo rm -rf /usr/local/bin/newrelic-infra-ctl
          sudo rm -rf /usr/local/bin/newrelic-infra-service
          sudo rm -rf /etc/newrelic*
          sudo rm -rf /var/db/newrelic-infra*
          sudo rm -rf /etc/systemd/system/newrelic-infra.service
          systemctl daemon-reload

          # if [ -f /etc/newrelic-infra.yml ]; then
          #   sudo rm /etc/newrelic-infra.yml;
          # fi
      vars:
        IS_SYSTEMCTL:
          sh: which systemctl | wc -l
        IS_INITCTL:
          sh: which initctl | wc -l

    install_infra:
      cmds:
        - |
          mkdir -p /tmp/newrelic
          sudo rm -rf /tmp/newrelic/*
          cd /tmp/newrelic

          curl -s https://api.github.com/repos/newrelic/infrastructure-agent/releases/latest \
          | grep "browser_download_url.*newrelic-infra_linux_*.*_arm.tar.gz" \
          | cut -d '"' -f 4 \
          | wget -i -
          tar xvfz newrelic-infra_linux_*.*_arm.tar.gz
          cd newrelic-infra
          sudo NRIA_LICENSE_KEY={{.NEW_RELIC_LICENSE_KEY}} ./installer.sh
          echo "enable_process_metrics: true" | sudo tee -a /etc/newrelic-infra.yml

          # Set Region
          if [ $(echo {{.NEW_RELIC_REGION}} | grep -i staging | wc -l) -gt 0 ]; then
            echo 'staging: true' | sudo tee -a /etc/newrelic-infra.yml > /dev/null
          fi
      silent: true

    restart:
      cmds:
        - |
          if [ {{.IS_SYSTEMCTL}} -gt 0 ]; then
            sudo systemctl restart newrelic-infra
          else 
            if [ {{.IS_INITCTL}} -gt 0 ]; then
              sudo initctl restart newrelic-infra
            else
              sudo /etc/init.d/newrelic-infra restart
            fi
          fi
      vars:
        IS_SYSTEMCTL:
          sh: which systemctl | wc -l
        IS_INITCTL:
          sh: which initctl | wc -l

    assert_agent_started:
      cmds:
        - |
          # Ensure agent has enough time to start
          sleep 10
          IS_INFRA_INSTALLED=$(sudo ps aux | grep newrelic-infra-service | grep -v grep | wc -l)
          if [ $IS_INFRA_INSTALLED -eq 0 ] ; then
            echo "The infrastructure agent has not started after installing. Please try again later, or see our documentation for installing manually https://docs.newrelic.com/docs/using-new-relic/cross-product-functions/install-configure/install-new-relic" >> /dev/stderr
            exit 31
          fi

postInstall:
  info: |2
      ⚙️  The Infrastructure Agent configuration file can be found in /etc/newrelic-infra.yml
      Edit this file to make changes or configure advanced features for the agent. See the docs for options:
      https://docs.newrelic.com/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings
      
      Note: Process monitoring has been enabled by default - all other config options are left to the user.
