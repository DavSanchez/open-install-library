---
- debug:
    msg: Install Kafka

- name: update packages
  shell: yum update -y  
  become: true 

- name: install java
  shell: yum install java-1.8.0-openjdk -y
  become: true 

- name: download kafka
  shell: wget "https://www.apache.org/dist/kafka/2.6.1/kafka_2.13-2.6.1.tgz" -P /etc/ 
  become: true 

- name: create and change directory
  shell: mkdir /etc/kafka && cd /etc/kafka
  become: true 

- name: extract tgz file
  shell: tar -xzf /etc/kafka_2.13-2.6.1.tgz -C /etc/kafka/
  become: true 

- name: Copy Server Properties
  template: 
      src: server.properties
      dest: /etc/kafka/kafka_2.13-2.6.1/config/server.properties
  become: true

- name: Copy Zookeeper service file
  template:
      src: zookeeper.service
      dest: /etc/systemd/system/zookeeper.service
  become: true

- name: Copy Kafka service file
  template:
      src: kafka.service
      dest: /etc/systemd/system/kafka.service
  become: true

- name: Add jmx rules to jmx_kafka_oprs
  shell: "sudo sed -i 's/-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false/-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -Djava.net.preferIPv4Stack=true/g' /etc/kafka/kafka_2.13-2.6.1/bin/kafka-run-class.sh"
  become: true

- name: restart daemon
  shell: systemctl daemon-reload
  become: true

- name: run zookeeper
  shell: systemctl start zookeeper.service
  become: true 

- name: run kafka
  shell: systemctl start kafka.service
  become: true

- name: wait
  wait_for:
    timeout: 10
  become: true

- name: create topic
  shell: /etc/kafka/kafka_2.13-2.6.1/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic topic_1
  become: true 

- name: push hello string
  shell: echo "Hello, World" | /etc/kafka/kafka_2.13-2.6.1/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic topic_1 > /dev/null
  become: true

- name: crete consumer group
  shell: /etc/kafka/kafka_2.13-2.6.1/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic topic_1 --group test &
  become: true

- name: check if group exist
  shell: /etc/kafka/kafka_2.13-2.6.1/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group test &
  become: true